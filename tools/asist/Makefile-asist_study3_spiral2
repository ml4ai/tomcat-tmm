# This Makefile is pulled from laplace along with all the files
# needed for the study-2_pilot-2_2021.02 responsible. This is done by the
# targets in the Makefile-asist in the root of this project's directory. This
# file is responsible for
# 1. Pulling messages from the GCS and convert
# 2. Converting messages to an appropriate matrix format
# 3. Training a model using the converted messages
# 4. Saving (locally) the trained parameters for future usage
# 5. Uploading the trained parameters to Laplace (requires explicitly target
# execution)
# 6. Starting an online agent with a model with pre-trained params (requires
# explicitly target execution)

# The name of the Google Cloud Source folder where the ASIST HSR data resides.
STUDY_ID = study-3_spiral-2_pilot

# Binaries required for the ASIST evaluation analyses
BUILD_DIR = ../../../build

# Path to the files containing the maps definition
MAP_DIR = map
MAP_PATH = $(MAP_DIR)/Saturn_2.1_3D_sm_v1.0.json

# Path to the file containing the model definition
MODEL_PATH = ../../../models/team_quality_model.json

# Original data from the message bus to be used for training
MSG_DIR = messages
SPLIT_MSG_DIR = split_messages
TRAIN_MSG_DIR = $(SPLIT_MSG_DIR)/train

# File with the trial numbers to use for training
TRAIN_TRIALS_FILE = $(SPLIT_MSG_DIR)/train_list.txt

# Directory where converted data will reside
EVIDENCE_DIR = evidence
TRAIN_SAMPLES_DIR = $(SAMPLES_DIR)/train

# Phony targets
.PHONY: all
.PHONY: build
.PHONY: sync
.PHONY: split
.PHONY: convert


all: build sync split map convert train

# Builds the system so that the model is retrained if there's a new version of
# the executable available and create the necessary folders for the files
# generated by this script.
build:
	@cd $(BUILD_DIR) && make -j convert
	@cd $(BUILD_DIR) && make -j train

# Synchronize message folder with the GSC
sync:
	@GCS_DIR=$(STUDY_ID) DATA_DIR=$(MSG_DIR) ../../../tools/asist/sync_asist_data

split: $(TRAIN_MSG_DIR)

# Creates symbolic links for the message files in the folder split_messages
# according to the trial numbers defined for training.
$(TRAIN_MSG_DIR): ../../../tools/asist/split_asist_data $(TRAIN_TRIALS_FILE)
	@echo "Reserving training messages..."
	@ORIGINAL_MSG_DIR=$(MSG_DIR) TRIALS_FILE=$(TRAIN_TRIALS_FILE) \
	TARGET_MSG_DIR=$@ ./$<

# Parses messages from the test bed and converts them to matrices of
# observations. One matrix for each observable node in the model. We always
# try to convert, if there's nothing to convert, the program will handle that.
convert: $(TRAIN_SAMPLES_DIR)

$(TRAIN_SAMPLES_DIR):
	@echo "Converting training data..."
	@./$(BUILD_DIR)/bin/convert --map_json $(MAP_PATH) \
		--messages_dir $(TRAIN_MSG_DIR) --data_dir $(TRAIN_SAMPLES_DIR) \
		--seconds 600 --step_size 1 --study 3

